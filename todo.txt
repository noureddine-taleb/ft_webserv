+ nginx HTTP 1.1
+ status code
+ default error pages
fork only allowed for cgi
static website
upload file support
+ methods: GET POST DELETE
ddos immune
+ multiple port support
+ config:
+ port host
server_names (domain)
the first server is the default if none other matches
setup default error pages
	route conf:
		supported method
		redirection
		root dir
		directory listing enable flag
		Set a default file to answer if the request is a directory
		cgi for some file extension (.php)

todo:
	simple static server

////////////////////////////////////////////////////////////////////

form data: upload files
=> strict input checking
=> send side check for EAGAIN & ECONNRESET
=> if i do autoindex and i click in video video play then return to autoindex program exit 
=> uplod : in case of text shod parsed the content :
    "----------------------------178924003759668761592596
    Content-Disposition: form-data; name="text"
    nbvc nv
    ----------------------------178924003759668761592596--"

////////////////////////////////////////////////////////////////////
open not work 500
#autoindex ..
infinit redirection in => /Users/kadjane/Desktop/web_serv2/srcs/book.pdf

  => protection for the functionsatol
  => handel infinit loop => done
  => handel cgi in diractory => done

  => check all and clean the code
  => protection for the functions
  => handel / in the post
	=> check if the socket would block in send side
=> / not exist => done 

exit@GLIBC_2.2.5
inet_addr@GLIBC_2.2.5
inet_ntoa@GLIBC_2.2.5
memcmp
memcpy
memmem
memmove
memset
perror@GLIBC_2.2.5
remove@GLIBC_2.2.5
rename@GLIBC_2.2.5
stat
strcmp
strcpy
strlen
strtol
unlink@GLIBC_2.2.5


on send check for 0 sent
when a file is uploaded it is deleted
http/1.1 not defaulting to closing connection
is it possible to serve short requests in one iteration

TOTEST:
test http status codes
multip servers
hostnames
default error pages
max body size
locations to different dir
index
autoindex
define certain methods for certain dirs
test each method
unknowen methods
file upload using raw body or form-data

simple cgi tests get/post/delete
The CGI should be run in the correct directory for relative path file access.
create scripts with errors/infinite loops and what not


headers should be compatible with normal nginx


wtf: Launch multiple servers at the same time with different configurations but with common ports. Does it work? If it does, ask why the server should work if one of the configurations isn't functional. Keep going.

siege -c 100 -t 1M -b http://localhost:8080 > 99.5

test cookie system

multiple cgi's

